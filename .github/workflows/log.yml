name: Keep Render Alive with 12-14 Minute Pings

on:
  schedule:
    - cron: '*/10 * * * *'  # Runs every 13 minutes
  workflow_dispatch:       # Allows manual triggering for testing

jobs:
  keep-alive:
    runs-on: ubuntu-latest
    steps:
      - name: Ping Server with Random Delay
        run: |
          # Generate a random delay between 0 and 60 seconds (0-1 minute)
          DELAY=$(( RANDOM % 61 ))  # Randomly picks 0 to 60 seconds
          echo "Waiting for ${DELAY} seconds before pinging..."
          sleep ${DELAY}  # Sleep for the random delay

          # Ping the server and log response
          START_TIME=$(date +%s)
          RESPONSE=$(curl -s -m 10 -w "\n%{time_total}\n%{http_code}" -X GET "https://my-notebook-backend-d61x.onrender.com/")
          END_TIME=$(date +%s)
          ELAPSED_TIME=$((END_TIME - START_TIME))

          # Log the details
          RESPONSE_TIME=$(echo "$RESPONSE" | tail -2 | head -1)
          HTTP_STATUS=$(echo "$RESPONSE" | tail -1)
          BODY=$(echo "$RESPONSE" | head -n -2)

          echo "🔹 Ping Time: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" > logs.txt
          echo "⏳ Elapsed Time: ${ELAPSED_TIME}s" >> logs.txt
          echo "🌐 HTTP Status: ${HTTP_STATUS}" >> logs.txt
          echo "📜 Response: ${BODY}" >> logs.txt
        shell: bash

      - name: Save Logs as Artifact
        if: always()  # Ensures logs are saved even if ping fails
        uses: actions/upload-artifact@v4
        with:
          name: ping-logs
          path: logs.txt
